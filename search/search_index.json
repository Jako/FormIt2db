{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FormIt2db/db2FormIt","text":"<p>FormIt hooks for saving/retreiving xPDO objects.</p>"},{"location":"#credits","title":"Credits","text":"<p>The snippets base on the code in the following thread in MODX forum https://forums.modx.com/thread/32560/formit2db-with-autocreate-schema-classes</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>MODX Revolution 2.6+</li> <li>PHP v5.6+</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Save xPDO objects during FormIt posts.</li> <li>Retreive xPDO objects before displaying FormIt forms.</li> </ul>"},{"location":"#license","title":"License","text":"<p>The project is licensed under the GPLv2 license.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-modx-extras","title":"Install from MODX Extras","text":"<p>Search for FormIt2db in the Package Manager of your MODX installation and install it in there.</p>"},{"location":"installation/#manual-installation","title":"Manual installation","text":"<p>If you can't access the MODX Extras Repository in your MODX installation, you can manually install FormIt2db.</p> <ul> <li>Download the transport package from MODX Extras (or one of the pre built transport packages in _packages)</li> <li>Upload the zip file to your MODX installation's <code>core/packages</code> folder or upload it manually in the MODX Package Manager.</li> <li>In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.</li> <li>FormIt2db should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.</li> </ul>"},{"location":"installation/#build-it-from-source","title":"Build it from source","text":"<p>To build and install the package from source you could use Git Package Management. The GitHub repository of FormIt2db contains a config.json to build that package locally. Use this option, if you want to debug FormIt2db and/or contribute bugfixes and enhancements.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#how-it-works","title":"How it works","text":"<p>The FormIt hooks<sup>1</sup> uses the following properties:</p>"},{"location":"usage/#hook-properties-for-formit2db","title":"Hook Properties for FormIt2db","text":"Property Description Default prefix Table prefix of the xPDO package MODX DB prefix packagename Package name of the xPDO object - classname Class name of the xPDO object - tablename Table name of the autocreated xPDO Package - where JSON encoded xPDO where clause - to update a row instead of creating a new one - paramname Requested POST param - to update a row instead of creating a new one - fieldname xPDO fieldname the POST param is compared with - to update a row instead of creating a new one 'paramname' arrayFormat Format to transform form fields that contains array data (i.e. checkboxes) into csv arrayFields JSON encoded array of form fields that contains array data [] removeFields JSON encoded array of form fields not saved in the xPDO object [] autoPackage Use the autocreated xPDO Package<sup>2</sup> false"},{"location":"usage/#hook-properties-for-db2formit","title":"Hook Properties for db2FormIt","text":"Property Description Default prefix Table prefix of the xPDO package MODX DB prefix packagename Package name of the xPDO object - classname Class name of the xPDO object - tablename Table name for autocreation of the xPDO Package - where JSON encoded xPDO where clause - to retreive an existing row - paramname Requested REQUEST param - to retreive an existing row - fieldname xPDO fieldname the REQUEST param is compared 'paramname' with - to retreive an existing row. arrayFormat Format to transform database fields that csv contains array data (i.e. checkboxes) into. arrayFields JSON encoded array of database fields that [] are transformed into arrays. ignoreFields JSON encoded array of database fields that [] are not retreived into FormIt. notFoundRedirect ID of the MODX resource the user is 0 redirected to, if the requested row is not found. autoPackage Autocreate the xPDO Package with packagename and tablename<sup>2</sup>. false"},{"location":"usage/#notes","title":"Notes","text":"<ol> <li> <p>The snippets base on the code in the following thread in MODX forum https://forums.modx.com/thread/32560/formit2db-with-autocreate-schema-classes\u00a0\u21a9</p> </li> <li> <p>If the xPDO package is autocreated, the classname in the package is generated by MODX and could be different to a classname set by parameter. If you disable the autoPackage parameter later, please look which classname was generated and change the parameter to that value.\u00a0\u21a9\u21a9</p> </li> </ol>"}]}