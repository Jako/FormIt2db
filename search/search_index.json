{
    "docs": [
        {
            "location": "/", 
            "text": "FormIt2db/db2FormIt\n\n\nFormIt hooks for saving/retreiving xPDO objects.\n\n\nRequirements\n\n\n\n\nMODX Revolution 2.2.4+\n\n\nPHP v5.3+\n\n\n\n\nFeatures\n\n\n\n\nSave xPDO objects during FormIt posts.\n\n\nRetreive xPDO objects before displaying FormIt forms.", 
            "title": "Description"
        }, 
        {
            "location": "/#formit2dbdb2formit", 
            "text": "FormIt hooks for saving/retreiving xPDO objects.", 
            "title": "FormIt2db/db2FormIt"
        }, 
        {
            "location": "/#requirements", 
            "text": "MODX Revolution 2.2.4+  PHP v5.3+", 
            "title": "Requirements"
        }, 
        {
            "location": "/#features", 
            "text": "Save xPDO objects during FormIt posts.  Retreive xPDO objects before displaying FormIt forms.", 
            "title": "Features"
        }, 
        {
            "location": "/installation/", 
            "text": "Install from MODX Extras\n\n\nSearch for FormIt2db in the Package Manager of your MODX installation and\ninstall it in there.\n\n\nManual installation\n\n\nIf you can't access the MODX Extras Repository in your MODX installation, you\ncan manually install FormIt2db.\n\n\n\n\nDownload the transport package from \nMODX Extras\n (or one of the pre built transport packages in \n_packages\n)\n\n\nUpload the zip file to your MODX installation's \ncore/packages\n folder.\n\n\nIn the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.\n\n\nFormIt2db should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.\n\n\n\n\nBuild it from source\n\n\nTo build and install the package from source you could use \nGit Package\nManagement\n. The GitHub\nrepository of FormIt2db contains a\n\nconfig.json\n\nto build that package locally. Use this option, if you want to debug FormIt2db\nand/or contribute bugfixes and enhancements.", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#install-from-modx-extras", 
            "text": "Search for FormIt2db in the Package Manager of your MODX installation and\ninstall it in there.", 
            "title": "Install from MODX Extras"
        }, 
        {
            "location": "/installation/#manual-installation", 
            "text": "If you can't access the MODX Extras Repository in your MODX installation, you\ncan manually install FormIt2db.   Download the transport package from  MODX Extras  (or one of the pre built transport packages in  _packages )  Upload the zip file to your MODX installation's  core/packages  folder.  In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.  FormIt2db should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.", 
            "title": "Manual installation"
        }, 
        {
            "location": "/installation/#build-it-from-source", 
            "text": "To build and install the package from source you could use  Git Package\nManagement . The GitHub\nrepository of FormIt2db contains a config.json \nto build that package locally. Use this option, if you want to debug FormIt2db\nand/or contribute bugfixes and enhancements.", 
            "title": "Build it from source"
        }, 
        {
            "location": "/usage/", 
            "text": "How it works\n\n\nThe FormIt hooks\n1\n could use the following properties:\n\n\nHook Properties for FormIt2db\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nprefix\n\n\nTable prefix of the xPDO package\n\n\nMODX DB prefix\n\n\n\n\n\n\npackagename\n\n\nPackage name of the xPDO object\n\n\n-\n\n\n\n\n\n\nclassname\n\n\nClass name of the xPDO object\n\n\n-\n\n\n\n\n\n\ntablename\n\n\nTable name of the autocreated xPDO Package\n\n\n-\n\n\n\n\n\n\nwhere\n\n\nJSON encoded xPDO where clause - to update a row instead of creating a new one\n\n\n-\n\n\n\n\n\n\nparamname\n\n\nRequested POST param - to update a row instead of creating a new one\n\n\n-\n\n\n\n\n\n\nfieldname\n\n\nxPDO fieldname the POST param is compared with - to update a row instead of creating a new one\n\n\n'paramname'\n\n\n\n\n\n\narrayFormat\n\n\nFormat to transform form fields that contains array data (i.e. checkboxes) into\n\n\ncsv\n\n\n\n\n\n\narrayFields\n\n\nJSON encoded array of form fields that contains array data\n\n\n[]\n\n\n\n\n\n\nremoveFields\n\n\nJSON encoded array of form fields not saved in the xPDO object\n\n\n[]\n\n\n\n\n\n\nautoPackage\n\n\nUse the autocreated xPDO Package\n2\n\n\nfalse\n\n\n\n\n\n\n\n\nHook Properties for db2FormIt\n\n\n\n\n\n\n\n\nProperty\n\n\nDescription\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\nprefix\n\n\nTable prefix of the xPDO package\n\n\nMODX DB prefix\n\n\n\n\n\n\npackagename\n\n\nPackage name of the xPDO object\n\n\n-\n\n\n\n\n\n\nclassname\n\n\nClass name of the xPDO object\n\n\n-\n\n\n\n\n\n\ntablename\n\n\nTable name for autocreation of the xPDO Package\n\n\n-\n\n\n\n\n\n\nwhere\n\n\nJSON encoded xPDO where clause - to retreive an existing row\n\n\n-\n\n\n\n\n\n\nparamname\n\n\nRequested REQUEST param - to retreive an existing row\n\n\n-\n\n\n\n\n\n\nfieldname\n\n\nxPDO fieldname the REQUEST param is compared\n\n\n'paramname'\n\n\n\n\n\n\n\n\nwith - to retreive an existing row.\n\n\n\n\n\n\n\n\narrayFormat\n\n\nFormat to transform database fields that\n\n\ncsv\n\n\n\n\n\n\n\n\ncontains array data (i.e. checkboxes) into.\n\n\n\n\n\n\n\n\narrayFields\n\n\nJSON encoded array of database fields that\n\n\n[]\n\n\n\n\n\n\n\n\nare transformed into arrays.\n\n\n\n\n\n\n\n\nignoreFields\n\n\nJSON encoded array of database fields that\n\n\n[]\n\n\n\n\n\n\n\n\nare not retreived into FormIt.\n\n\n\n\n\n\n\n\nnotFoundRedirect\n\n\nID of the MODX resource the user is\n\n\n0\n\n\n\n\n\n\n\n\nredirected to, if the requested row is not\n\n\n\n\n\n\n\n\n\n\nfound.\n\n\n\n\n\n\n\n\nautoPackage\n\n\nAutocreate the xPDO Package with packagename\n\n\n\n\n\n\n\n\n\n\nand tablename\n2\n.\n\n\nfalse\n\n\n\n\n\n\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nThe snippets bases on the code in the following thread in MODX forum https://forums.modx.com/thread/32560/formit2db-with-autocreate-schema-classes\n\n\n\n\n\n\nIf the xPDO package is autocreated, the classname in the package is generated by MODX and could be different to a classname set by parameter. If you disable the autoPackage parameter later, please look which classname was generated and change the parameter to that value.", 
            "title": "Usage"
        }, 
        {
            "location": "/usage/#how-it-works", 
            "text": "The FormIt hooks 1  could use the following properties:", 
            "title": "How it works"
        }, 
        {
            "location": "/usage/#hook-properties-for-formit2db", 
            "text": "Property  Description  Default      prefix  Table prefix of the xPDO package  MODX DB prefix    packagename  Package name of the xPDO object  -    classname  Class name of the xPDO object  -    tablename  Table name of the autocreated xPDO Package  -    where  JSON encoded xPDO where clause - to update a row instead of creating a new one  -    paramname  Requested POST param - to update a row instead of creating a new one  -    fieldname  xPDO fieldname the POST param is compared with - to update a row instead of creating a new one  'paramname'    arrayFormat  Format to transform form fields that contains array data (i.e. checkboxes) into  csv    arrayFields  JSON encoded array of form fields that contains array data  []    removeFields  JSON encoded array of form fields not saved in the xPDO object  []    autoPackage  Use the autocreated xPDO Package 2  false", 
            "title": "Hook Properties for FormIt2db"
        }, 
        {
            "location": "/usage/#hook-properties-for-db2formit", 
            "text": "Property  Description  Default      prefix  Table prefix of the xPDO package  MODX DB prefix    packagename  Package name of the xPDO object  -    classname  Class name of the xPDO object  -    tablename  Table name for autocreation of the xPDO Package  -    where  JSON encoded xPDO where clause - to retreive an existing row  -    paramname  Requested REQUEST param - to retreive an existing row  -    fieldname  xPDO fieldname the REQUEST param is compared  'paramname'     with - to retreive an existing row.     arrayFormat  Format to transform database fields that  csv     contains array data (i.e. checkboxes) into.     arrayFields  JSON encoded array of database fields that  []     are transformed into arrays.     ignoreFields  JSON encoded array of database fields that  []     are not retreived into FormIt.     notFoundRedirect  ID of the MODX resource the user is  0     redirected to, if the requested row is not      found.     autoPackage  Autocreate the xPDO Package with packagename      and tablename 2 .  false", 
            "title": "Hook Properties for db2FormIt"
        }, 
        {
            "location": "/usage/#notes", 
            "text": "The snippets bases on the code in the following thread in MODX forum https://forums.modx.com/thread/32560/formit2db-with-autocreate-schema-classes    If the xPDO package is autocreated, the classname in the package is generated by MODX and could be different to a classname set by parameter. If you disable the autoPackage parameter later, please look which classname was generated and change the parameter to that value.", 
            "title": "Notes"
        }
    ]
}